# This is a basic workflow to help you get started with Actions

name: Create Release of BootStrap Files

# Controls when the workflow will run
on:
  # Triggers the workflow on push events when Bootstrap folder files change
  push:
    branches: [ "main" ]
    paths:
      - 'Bootstrap/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true
        default: 'v1.0.0'
      release_name:
        description: 'Release name'
        required: true
        default: 'Bootstrap VM Release'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Permissions needed for creating releases
    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set release variables
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Generate tag name based on timestamp for automatic releases
            echo "tag_name=v$(date +%Y.%m.%d.%H%M%S)" >> $GITHUB_OUTPUT
            echo "release_name=Bootstrap VM $(date +%Y.%m.%d.%H%M%S)" >> $GITHUB_OUTPUT
          else
            echo "tag_name=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
            echo "release_name=${{ github.event.inputs.release_name }}" >> $GITHUB_OUTPUT
          fi
          echo "directory=Bootstrap" >> $GITHUB_OUTPUT
        
      - name: Verify directory exists
        run: |
          if [ ! -d "${{ steps.vars.outputs.directory }}" ]; then
            echo "Error: Directory ${{ steps.vars.outputs.directory }} does not exist"
            exit 1
          fi
          echo "Directory ${{ steps.vars.outputs.directory }} found"
          ls -la "${{ steps.vars.outputs.directory }}"
  
      - name: Create archive of directory
        run: |
          cd "${{ steps.vars.outputs.directory }}"
          zip -r "../${{ steps.vars.outputs.directory }}.zip" .
          cd ..
          tar -czf "${{ steps.vars.outputs.directory }}.tar.gz" -C "${{ steps.vars.outputs.directory }}" .
          
      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << EOF
          # ${{ steps.vars.outputs.release_name }}
          
          This release contains all files from the \`${{ steps.vars.outputs.directory }}\` directory.
          
          ## Files Included
          \`\`\`
          $(find "${{ steps.vars.outputs.directory }}" -type f | sort)
          \`\`\`
          
          ## Download Options
          - **${{ steps.vars.outputs.directory }}.zip** - ZIP archive of all files
          - **${{ steps.vars.outputs.directory }}.tar.gz** - TAR.GZ archive of all files
          - Individual files are also available below
          
          ## Generated on
          $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          ## Commit
          ${{ github.sha }}
          EOF
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          name: ${{ steps.vars.outputs.release_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            ${{ steps.vars.outputs.directory }}.zip
            ${{ steps.vars.outputs.directory }}.tar.gz
            Bootstrap/*.ps1
            Bootstrap/*.psm1
